  grammar LXFExpression
    expression        <- ternary
    ternary           <- logical_or ("?" expression ":" expression)?
    logical_or        <- logical_and (("||" / "|") logical_and)*
    logical_and       <- comparison (("&&" / "&") comparison)*
    comparison        <- additive (("<=" / ">=" / "<" / ">" / "==" / "!=") additive)*
    additive          <- multiplicative (("+" / "-") multiplicative)*
    multiplicative    <- power (("*" / "/" / "%") power)*
    power             <- unary ("^" unary)*
    unary             <- ("-" / "!")* primary
    primary           <- number / boolean / variable / function / "(" expression ")"

    function          <- function_name unary
    function_name     <- "sin" / "cos" / "tan" / "asin" / "acos" / "atan" /
                         "deg" / "rad" / "abs" / "sqrt" / "floor" / "ceil" / "round"

    variable          <- "$" "{" identifier "}" / "$" identifier
    identifier        <- [a-zA-Z] [a-zA-Z0-9]*

    boolean           <- "true" / "false"
    number            <- float / integer
    float             <- integer "." [0-9]+
    integer           <- [0-9]+

    _                 <- [ \t]*
