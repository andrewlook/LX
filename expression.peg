  grammar LXFExpression
    EXPRESSION        <- SPC TERNARY SPC
    TERNARY           <- LOGICAL_OR (SPC "?" SPC EXPRESSION SPC ":" SPC EXPRESSION)?
    LOGICAL_OR        <- LOGICAL_AND (SPC? ("||" / "|") SPC? LOGICAL_AND)*
    LOGICAL_AND       <- COMPARISON (SPC? ("&&" / "&") SPC? COMPARISON)*
    COMPARISON        <- ADDITIVE (SPC? ("<=" / ">=" / "<" / ">" / "==" / "!=") SPC? ADDITIVE)*
    ADDITIVE          <- MULTIPLICATIVE (SPC? ADDITIVE_OP SPC? MULTIPLICATIVE)*
    ADDITIVE_OP       <- "+" / "-"
    MULTIPLICATIVE    <- POWER (SPC? ("*" / "/" / "%") SPC? POWER)*
    POWER             <- UNARY (SPC? "^" SPC? UNARY)*
    UNARY             <- ("-" / "!")* SPC PRIMARY
    PRIMARY           <- NUMBER / BOOLEAN_TYPE / VARIABLE / FUNCTION / "(" SPC EXPRESSION SPC ")"

    FUNCTION          <- FUNCTION_NAME SPC "(" SPC EXPRESSION SPC ")"
    FUNCTION_NAME     <- "sin" / "cos" / "tan" / "asin" / "acos" / "atan" /
                         "deg" / "rad" / "abs" / "sqrt" / "floor" / "ceil" / "round"

    VARIABLE          <- "$" "{" IDENTIFIER "}" / "$" IDENTIFIER
    IDENTIFIER        <- [a-zA-Z] [a-zA-Z0-9]*

    BOOLEAN_TYPE      <- "true" / "false"
    NUMBER            <- FLOAT_TYPE / INTEGER_TYPE
    FLOAT_TYPE        <- INTEGER_TYPE "." [0-9]+
    INTEGER_TYPE      <- [0-9]+

    SPC               <- [ \t]*